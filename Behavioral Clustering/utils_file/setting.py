import cv2

class args_class(object):

    def __init__(self):
        super(args_class, self).__init__()

        ## please note that imgdir, tracked_json, contdir, videodir are list with the same length and the elements
        ## in these list are one-to-one correspondence, that is, elements in different list with same index belongs 
        ## to the same video

        ## imgdir is a list of folders where frames extracted from videos will be saved
        self.imgdir = [
            '/disk2/zexin/project/mice/clustering_sequencial/forZexin/cluster_results/0812_black_two/pose_track_vis/', # 0
            '/disk2/zexin/project/mice/clustering_sequencial/forZexin/cluster_results/0825_black_two/pose_track_vis/', # 1
            '/disk2/zexin/project/mice/clustering_sequencial/forZexin/cluster_results/0856_black_two/pose_track_vis/', # 2
            ]
        ## tracked_json is a list of the json files that are generated by tracking code
        self.tracked_json = [
            '/disk2/zexin/project/mice/track_result/insteraction/0812_black_two/alphapose-results-forvis-tracked.json', # 0
            '/disk2/zexin/project/mice/track_result/insteraction/0825_black_two/alphapose-results-forvis-tracked.json', # 1
            '/disk2/zexin/project/mice/track_result/insteraction/0856_black_two/alphapose-results-forvis-tracked.json', # 2
            ]
        ## contdir is a list of folders where contour of frames extracted from videos will be saved
        self.contdir = [
            '/disk2/zexin/project/mice/clustering_sequencial/forZexin/cluster_results/0812_black_two/contour/', # 0
            '/disk2/zexin/project/mice/clustering_sequencial/forZexin/cluster_results/0825_black_two/contour/', # 1
            '/disk2/zexin/project/mice/clustering_sequencial/forZexin/cluster_results/0856_black_two/contour/', # 2
            ]
        ## videodir is a list of videos to be analysed
        self.videodir = [
            '/home/zexin/ruihan/ruihan_video/0603/0812_black_two.mov', # 0
            '/home/zexin/ruihan/ruihan_video/0603/0825_black_two.mov', # 1
            '/home/zexin/ruihan/ruihan_video/0603/0856_black_two.mov', # 2
            ]

        ## mice_num: the max number of the mice in the videos
        self.mice_num = 2
        ## joint_num: number of keypoints
        self.joint_num = 4
        ## joint_pair: list of keypoint pairs. This is for visualization. For example,[[0,1]] means that there will be a line connecting keypoint 0 and keypoint 1 in demo video 
        self.joint_pair = [[0,1],[0,2],[0,3]]

        # cluster_arg: parameter of features and threshold for clustering 
        self.cluster_arg = [
        {
            'thred':30,
            # 'thred':[i for i in range(30,500,20)],
            ## name: for display
            'name':'all_twoMice',
            'evaluation_metric':'Adjusted Rand index',
            'features_arg':[\
             {'feat_key':'newFeatureName','weight':4,'norm':'zscore_all'},

             {'feat_key':'body_length','weight':1,'norm':'zscore_all'},
             {'feat_key':'head_length','weight':1,'norm':'zscore_all'},
             {'feat_key':'head_body_angles','weight':1,'norm':'zscore_all'},
             {'feat_key':'displace_rho','weight':1,'norm':'zscore_all'},
             {'feat_key':'displace_phi_c','weight':1,'norm':'zscore_all'},
             {'feat_key':'displace_phi_s','weight':1,'norm':'zscore_all'},
             {'feat_key':'nose_fft_amp','weight':1,'norm':'zscore_all'},
             {'feat_key':'nose_fft_ang','weight':1,'norm':'zscore_all'},
             {'feat_key':'contourPCA_fft_amp','weight':1,'norm':'zscore_all'},
             {'feat_key':'contourPCA_fft_ang','weight':1,'norm':'zscore_all'},
             {'feat_key':'body_change_ang','weight':1,'norm':'zscore_all'},

             {'feat_key':'body_length_TO','weight':1,'norm':'zscore_all'},
             {'feat_key':'head_length_TO','weight':1,'norm':'zscore_all'},
             {'feat_key':'head_body_angles_TO','weight':1,'norm':'zscore_all'},
             {'feat_key':'displace_rho_TO','weight':1,'norm':'zscore_all'},
             {'feat_key':'displace_phi_c_TO','weight':1,'norm':'zscore_all'},
             {'feat_key':'displace_phi_s_TO','weight':1,'norm':'zscore_all'},
             {'feat_key':'nose_fft_amp_TO','weight':1,'norm':'zscore_all'},
             {'feat_key':'nose_fft_ang_TO','weight':1,'norm':'zscore_all'},
             {'feat_key':'contourPCA_fft_amp_TO','weight':1,'norm':'zscore_all'},
             {'feat_key':'contourPCA_fft_ang_TO','weight':1,'norm':'zscore_all'},

             ],
          },
        ]
        
        ## distance_threshold: threshold of mice's distance from each other. Measurement is mouse length. For example, if distance_threshold = 1.8 means that only clips where mice's distance from each other is short than 1.8*average mouse length will be ananlysed.
        self.distance_threshold = 1.8
        ## fft_firstK: number of components of Fourier Transform for analysed. For example, fft_firstK = 8 means that the first 8 component of Fourier Transform will be use as a feature.
        self.fft_firstK = 8
        ## algorithm that use to reduce dimension. 'tsne' or 'umap' 
        self.DR_method = 'umap'
        ## clip_length: number of frames of a clip
        self.clip_length = 15
        ## targetMouseID: id of the target mouse
        self.targetMouseID = 0 # index start with 0
        ## ids of video for evaluation
        self.video_ids_forEvaluation=[3,4]
        

        ## video_fps: fps of generated demo videos
        self.video_fps = 30
        ## max number of clips in one cluster that use to visulize
        self.max_clips_num = 10000000
        ## gen_video_folderï¼š folder to save the generated demo videos
        self.gen_video_folder = '/disk2/zexin/project/mice/clustering_sequencial/forZexin/results/new_order/'
        self.result_folder = '/disk2/zexin/project/mice/clustering_sequencial/forZexin/results/'
        ## video_name_suffix: suffix of name of the generated demo videos  
        # self.video_name_suffix = 'all_15less_1.8distance_displace_distance_NoGray_FFT8_weight1-4_long_thred150_45cluster_1_forDemo'
        self.video_name_suffix = 'individual_behavior_single_80_testNewFeature_evalNewFeature'


        ## json_keyFormat: key format of the json file. ''for unkown format
        self.json_keyFormat = 'frame_%d'  ## ''for unkown format
        ## contDataFramePath: path to contour pickle data. Default value would be fine.
        self.contDataFramePath = './faces.pckl'
        ## contPCAPath: path to contour PCA pickle data. Default value would be fine.
        self.contPCAPath = './pca.pckl'
        ## dataPath_for_UI: folder to save data for UI
        self.dataPath_for_UI = './data_for_ui_1/'
        ## font: parameter for visualization, default value would be fine.
        self.font = cv2.FONT_HERSHEY_SIMPLEX
        ## bottomLeftCornerOfText: parameter for visualization, default value would be fine.
        self.bottomLeftCornerOfText = (50,30)
        ## fontScale: parameter for visualization, default value would be fine.
        self.fontScale = 1
        ## fontColor: parameter for visualization, default value would be fine.
        self.fontColor = (255,255,255)
        ## lineType: parameter for visualization, default value would be fine.
        self.lineType = 2
        

        
        
        





